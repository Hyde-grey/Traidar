/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/3dModels/TraidarLogo.glb --types --transform 
Files: ./public/3dModels/TraidarLogo.glb [1.79MB] > C:\Users\muzik\Documents\traidar-landing\TraidarLogo-transformed.glb [123.11KB] (93%)
*/

import * as THREE from "three";
import React, { type JSX, useRef, useState } from "react";
import { useGLTF, Text3D, Center, Environment } from "@react-three/drei";
import {
  EffectComposer,
  Bloom,
  ChromaticAberration,
} from "@react-three/postprocessing";
import { GLTF } from "three-stdlib";
import { useFrame } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    model: THREE.Mesh;
  };
  materials: {
    CustomMaterial: THREE.MeshStandardMaterial;
  };
  animations: THREE.AnimationClip[];
};

export function TraidarLogoModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/3dModels/TraidarLogo-transformed.glb"
  ) as unknown as GLTFResult;

  const groupRef = useRef<THREE.Group>(null);
  const materialRef = useRef<THREE.MeshStandardMaterial>(null);

  // Use the useFrame hook just for rotation
  useFrame((state, delta) => {
    if (groupRef.current) {
      groupRef.current.rotation.y += delta * 0.1;
    }
  });

  return (
    <>
      <Environment preset="warehouse" />
      <group
        {...props}
        ref={groupRef}
        dispose={null}
        scale={1}
        rotation={[0, Math.PI * -1, Math.PI * -0.5]}
      >
        {/* Add backlight */}
        <pointLight
          position={[-2, 0, -2]}
          intensity={2}
          color="#ffffff"
          distance={5}
        />

        <mesh
          geometry={nodes.model.geometry}
          material={materials.CustomMaterial}
          rotation={[0, Math.PI * 0.5, 0]}
          position={[1, 0, 0]}
          scale={[1, 1, 1]}
        >
          <meshStandardMaterial
            ref={materialRef}
            color="#ffffff"
            toneMapped={false}
            metalness={1}
            roughness={0.1}
            envMapIntensity={2}
          />
        </mesh>

        <EffectComposer>
          <Bloom
            intensity={0.3}
            luminanceThreshold={0.8}
            luminanceSmoothing={0.5}
            mipmapBlur
            radius={0.8}
          />
          <ChromaticAberration
            offset={[0.001, 0.001]}
            radialModulation={true}
            modulationOffset={0.5}
          />
        </EffectComposer>
      </group>
    </>
  );
}

useGLTF.preload("/3dModels/TraidarLogo-transformed.glb");
